{"name": "google-analytics-pipeline", "version": "1", "cache_dir": "./_cache_google_analytics", "steps": [{"genie_result": {"id": "separate_hits_70651", "code": "import pandas as pd\n\ndef separate_hits(df):\n    \"\"\"\n    Input:\n    df: pandas dataframe with columns: Index(['visitorId', 'visitNumber', 'visitId', 'visitStartTime', 'date',\n       'totals', 'trafficSource', 'device', 'geoNetwork', 'customDimensions',\n       'hits', 'fullVisitorId', 'userId', 'clientId', 'channelGrouping',\n       'socialEngagementType'],\n      dtype='object')\n    \n    Output:\n    new_df: pandas dataframe with separate rows for each item in the hits column and the same value for each item in the totals column\n    \"\"\"\n    \n    # create new dataframe with separate row for each item in hits column\n    new_df = df.explode('hits')\n    \n    # drop columns except hits and totals\n    new_df = new_df[['hits', 'totals']]\n    \n    return new_df\n", "cache_dir": "./_cache_google_analytics"}, "data": {"key_path": {"name": null, "default_value": null, "env_var": "GOOGLE_APPLICATION_CREDENTIALS"}, "query": "\nselect * from `bigquery-public-data.google_analytics_sample.ga_sessions_*`\nwhere _TABLE_SUFFIX between '20170701' and '20170707'\n", "query_args": {"start_date": {"name": "analysis-start-date", "default_value": null, "env_var": null}, "end_date": {"name": "analysis-end-date", "default_value": null, "env_var": null}}}, "additional_input_sources": null, "additional_input_genies": null, "additional_input_arguments": null, "sink": null}, {"genie_result": {"id": "extract_page_path_78866", "code": "import pandas as pd\n\ndef extract_page_path(df):\n    # extract page path\n    df['page_path'] = df['hits'].apply(lambda x: x['page']['pagePath'])\n    \n    return df\n", "cache_dir": "./_cache_google_analytics"}, "data": {"id": "separate_hits_70651", "code": "import pandas as pd\n\ndef separate_hits(df):\n    \"\"\"\n    Input:\n    df: pandas dataframe with columns: Index(['visitorId', 'visitNumber', 'visitId', 'visitStartTime', 'date',\n       'totals', 'trafficSource', 'device', 'geoNetwork', 'customDimensions',\n       'hits', 'fullVisitorId', 'userId', 'clientId', 'channelGrouping',\n       'socialEngagementType'],\n      dtype='object')\n    \n    Output:\n    new_df: pandas dataframe with separate rows for each item in the hits column and the same value for each item in the totals column\n    \"\"\"\n    \n    # create new dataframe with separate row for each item in hits column\n    new_df = df.explode('hits')\n    \n    # drop columns except hits and totals\n    new_df = new_df[['hits', 'totals']]\n    \n    return new_df\n", "cache_dir": "./_cache_google_analytics"}, "additional_input_sources": null, "additional_input_genies": null, "additional_input_arguments": null, "sink": null}, {"genie_result": {"id": "run_70152", "code": "\ndef run(df):\n    df[\"hit_type\"] = df[\"hits\"].apply(lambda x: x[\"type\"])\n    return df\n", "cache_dir": "./_cache_google_analytics"}, "data": {"id": "extract_page_path_78866", "code": "import pandas as pd\n\ndef extract_page_path(df):\n    # extract page path\n    df['page_path'] = df['hits'].apply(lambda x: x['page']['pagePath'])\n    \n    return df\n", "cache_dir": "./_cache_google_analytics"}, "additional_input_sources": null, "additional_input_genies": null, "additional_input_arguments": null, "sink": null}, {"genie_result": {"id": "extract_hit_number_77980", "code": "import pandas as pd\n\ndef extract_hit_number(df):\n    df['hit_number'] = df['hits'].apply(lambda x: x.get('hitNumber'))\n    return df\n", "cache_dir": "./_cache_google_analytics"}, "data": {"id": "run_70152", "code": "\ndef run(df):\n    df[\"hit_type\"] = df[\"hits\"].apply(lambda x: x[\"type\"])\n    return df\n", "cache_dir": "./_cache_google_analytics"}, "additional_input_sources": null, "additional_input_genies": null, "additional_input_arguments": null, "sink": null}, {"genie_result": {"id": "run_39896", "code": "\ndef run(df):\n    df[\"action_type\"] = df[\"hits\"].apply(lambda x: int(x[\"eCommerceAction\"][\"action_type\"]))\n    return df\n", "cache_dir": "./_cache_google_analytics"}, "data": {"id": "extract_hit_number_77980", "code": "import pandas as pd\n\ndef extract_hit_number(df):\n    df['hit_number'] = df['hits'].apply(lambda x: x.get('hitNumber'))\n    return df\n", "cache_dir": "./_cache_google_analytics"}, "additional_input_sources": null, "additional_input_genies": null, "additional_input_arguments": null, "sink": null}, {"genie_result": {"id": "add_bounces_column_93508", "code": "import pandas as pd\n\ndef add_bounces_column(df):\n    df['bounces'] = df['totals'].apply(lambda x: True if 'bounces' in x and x['bounces'] == 1 else False)\n    return df\n", "cache_dir": "./_cache_google_analytics"}, "data": {"id": "run_39896", "code": "\ndef run(df):\n    df[\"action_type\"] = df[\"hits\"].apply(lambda x: int(x[\"eCommerceAction\"][\"action_type\"]))\n    return df\n", "cache_dir": "./_cache_google_analytics"}, "additional_input_sources": null, "additional_input_genies": null, "additional_input_arguments": null, "sink": null}, {"genie_result": {"id": "get_page_bounce_rate_81411", "code": "import pandas as pd\n\ndef get_page_bounce_rate(df):\n    hit1_page_df = df[(df[\"hit_number\"] == 1) & (df[\"hit_type\"] == \"PAGE\")]\n    page_agg_df = hit1_page_df.groupby(\"page_path\").agg(\n        views=pd.NamedAgg(column=\"page_path\", aggfunc=\"count\"),\n        bounce_rate=pd.NamedAgg(column=\"bounces\", aggfunc=lambda x: sum(x)/len(x))\n    ).sort_values(\"views\", ascending=False)\n    return page_agg_df\n", "cache_dir": "./_cache_google_analytics"}, "data": {"id": "add_bounces_column_93508", "code": "import pandas as pd\n\ndef add_bounces_column(df):\n    df['bounces'] = df['totals'].apply(lambda x: True if 'bounces' in x and x['bounces'] == 1 else False)\n    return df\n", "cache_dir": "./_cache_google_analytics"}, "additional_input_sources": null, "additional_input_genies": null, "additional_input_arguments": null, "sink": {"path": {"name": "bounce-rate-export-path", "default_value": null, "env_var": null}, "index": {"name": "export-pd-index", "default_value": false, "env_var": null}, "reset_index": {"name": "reset-pd-index", "default_value": true, "env_var": null}}}, {"genie_result": {"id": "aggregate_data_92888", "code": "import pandas as pd\n\ndef aggregate_data(df):\n    df_filtered = df[df['hit_type']=='PAGE']\n    df_grouped = df_filtered.groupby('page_path').agg({'hit_type':'count','bounces':'mean'})\n    df_grouped.columns = ['views','exit_rate']\n    df_sorted = df_grouped.sort_values(by='views', ascending=False)\n    return df_sorted\n", "cache_dir": "./_cache_google_analytics"}, "data": {"id": "add_bounces_column_93508", "code": "import pandas as pd\n\ndef add_bounces_column(df):\n    df['bounces'] = df['totals'].apply(lambda x: True if 'bounces' in x and x['bounces'] == 1 else False)\n    return df\n", "cache_dir": "./_cache_google_analytics"}, "additional_input_sources": null, "additional_input_genies": null, "additional_input_arguments": null, "sink": {"path": {"name": "exit-rate-export-path", "default_value": null, "env_var": null}, "index": {"name": "export-pd-index", "default_value": false, "env_var": null}, "reset_index": {"name": "reset-pd-index", "default_value": true, "env_var": null}}}, {"genie_result": {"id": "group_action_type_27490", "code": "import pandas as pd\n\ndef group_action_type(df):\n    # group data by action_type and count number of rows in each group\n    action_counts = df.groupby('action_type').size().reset_index(name='count')\n    \n    # remove action_type other than 1, 2, 5, 6\n    action_counts = action_counts[action_counts['action_type'].isin([1, 2, 5, 6])]\n    \n    # replace the action_type values as:\n    # 1: Click on product list page\n    # 2: Product details page\n    # 5: Checkout\n    # 6: Purchase Complete\n    action_counts['action_type'] = action_counts['action_type'].replace({1: 'Click on product list page', 2: 'Product details page', 5: 'Checkout', 6: 'Purchase Complete'})\n    \n    return action_counts\n", "cache_dir": "./_cache_google_analytics"}, "data": {"id": "add_bounces_column_93508", "code": "import pandas as pd\n\ndef add_bounces_column(df):\n    df['bounces'] = df['totals'].apply(lambda x: True if 'bounces' in x and x['bounces'] == 1 else False)\n    return df\n", "cache_dir": "./_cache_google_analytics"}, "additional_input_sources": null, "additional_input_genies": null, "additional_input_arguments": null, "sink": {"path": {"name": "funnel-export-path", "default_value": null, "env_var": null}, "index": {"name": "export-pd-index", "default_value": false, "env_var": null}, "reset_index": {"name": "reset-pd-index", "default_value": true, "env_var": null}}}]}